#!/usr/bin/env node
/**
 * srcDirectory - Represents source directory
 * componentDirectory - Represents component directory in src
 * argv - Array of passed options
 */"use strict";require("regenerator-runtime/runtime");var _fs=require("fs"),_path=require("path");function asyncGeneratorStep(a,b,c,d,e,f,g){try{var h=a[f](g),i=h.value}catch(a){return void c(a)}h.done?b(i):Promise.resolve(i).then(d,e)}function _asyncToGenerator(a){return function(){var b=this,c=arguments;return new Promise(function(d,e){function f(a){asyncGeneratorStep(h,d,e,f,g,"next",a)}function g(a){asyncGeneratorStep(h,d,e,f,g,"throw",a)}var h=a.apply(b,c);f(void 0)})}}function _toArray(a){return _arrayWithHoles(a)||_iterableToArray(a)||_nonIterableRest()}function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}function _iterableToArray(a){if(Symbol.iterator in Object(a)||"[object Arguments]"===Object.prototype.toString.call(a))return Array.from(a)}function _arrayWithHoles(a){if(Array.isArray(a))return a}var componentName,componentDirectory,componentNameCc,srcDirectory=(0,_path.resolve)(process.cwd(),"src"),componentsDirectory=(0,_path.resolve)(srcDirectory,"components"),_process$argv=_toArray(process.argv),argv=_process$argv.slice(2),checkComponentName=function(a){//RegExp('[a-zA-Z]+[-][a-zA-Z]+').test(name) doesn't work might do manual search!
if(a.lastIndexOf("-")!==a.indexOf("-"))return!1;var b=!0,c=!1,d=void 0;try{for(var e,f,g=a[Symbol.iterator]();!(b=(e=g.next()).done);b=!0)if(f=e.value,!1===isNaN(f))return!1}catch(a){c=!0,d=a}finally{try{b||null==g["return"]||g["return"]()}finally{if(c)throw d}}return!0},getComponentName=function(a){var b=a.split("-"),c=b[0].charAt(0).toUpperCase()+b[0].slice(1),d=b[1].charAt(0).toUpperCase()+b[1].slice(1);return"".concat(c).concat(d)},fileType=function(a){return new Promise(function(b,c){(0,_fs.stat)(a,function(d,e){return d&&c({code:4002,file:a}),void(e.isDirectory()?b(!0):c({code:4001,file:a}))})})},fileExists=function(a){return new Promise(function(b,c){(0,_fs.access)(a,function(d){d?c({code:4e3,file:a}):b(!0)})})},fileCreate=function(a){return new Promise(function(b,c){(0,_fs.mkdir)(a,{recursive:!0},function(d){d?c({code:4003,file:a}):b(!0)})})},componentCreatePromise=function(a){return new Promise(function(b,c){fileExists(a.name).then(function(b){return b&&console.log("found - ".concat(a.name)),fileType(a.name)}).then(function(){console.log("isDirectory? true - ".concat(a.name)),b()})["catch"](function(b){return 4e3===b.code&&a.create?(console.log("creating - ".concat(a.name)),fileCreate(a.name)):void(4001===b.code&&(console.log("isDirectory? false - ".concat(a.name)),c(b)))}).then(function(c){c&&(console.log("created - ".concat(a.name)),b())})["catch"](function(a){console.log(a),c(a)})})},componentCreate=function(a){return Promise.all(a.map(function(a){return componentCreatePromise(a)}))},_main=/*#__PURE__*/function(){var a=_asyncToGenerator(/*#__PURE__*/regeneratorRuntime.mark(function a(b){var c,d;return regeneratorRuntime.wrap(function(a){for(;;)switch(a.prev=a.next){case 0:if(1<b.length)console.log("Error! I dont accept more than 1 parameter!");else if(componentName=b[0],checkComponentName(componentName)){componentNameCc=getComponentName(componentName),componentDirectory=(0,_path.resolve)(componentsDirectory,componentName),c=[{name:srcDirectory,create:!1},{name:componentsDirectory,create:!1},{name:componentDirectory,create:!0}];try{d=componentCreate(c),d&&console.log("Done!")}catch(a){console.log(a)}}else console.log("Use component name of format 'component-name'");case 1:case"end":return a.stop();}},a)}));return function(){return a.apply(this,arguments)}}();_main(argv);
